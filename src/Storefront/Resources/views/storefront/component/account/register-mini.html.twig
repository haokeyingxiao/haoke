{% block component_account_register %}
    <div class="card register-card mb-3 border-0 rounded-4 p-3 p-md-4 p-xl-5">
        <div class="card-body">
            {% block component_account_register_header %}
                {% block component_account_register_logo %}
                    <div class="text-center mb-5">
                        {% sw_include '@Storefront/storefront/layout/header/logo.html.twig' %}
                    </div>
                {% endblock %}
                {% if cardTitle %}
                    <h2 class="card-title">
                        {{ cardTitle }}
                    </h2>
                {% endif %}
            {% endblock %}
            {% block component_account_register_flashbags %}
                <div class="flashbags container">
                    {% for type, messages in app.flashes %}
                        {% sw_include '@Storefront/storefront/utilities/alert.html.twig' with { type: type, list: messages } %}
                    {% endfor %}
                </div>
            {% endblock %}
            {% block component_account_register_form %}
                <form action="{{ path('frontend.account.register.save') }}"
                      class="register-form"
                      method="post"
                      data-form-submit-loader="true"
                      data-form-validation="true">
                    {% block component_account_register_redirect %}
                        <input type="hidden"
                               name="redirectTo"
                               value="{{ redirectTo }}">

                        <input type="hidden"
                               name="redirectParameters"
                               value="{{ redirectParameters }}">
                    {% endblock %}

                    {% block component_account_register_create_account %}
                        <input type="hidden"
                               name="createCustomerAccount"
                               value="1">
                    {% endblock %}

                    {% block component_account_register_form_action %}
                        <input type="hidden"
                               name="errorRoute"
                               value="{{ errorRoute ?: 'frontend.account.register.page' }}">

                        <input type="hidden"
                               name="errorParameters"
                               value="{{ errorParameters }}">
                    {% endblock %}

                    {% block component_account_register_personal %}
                        <div class="register-personal mb-3">
                            {% block component_account_register_personal_fields %}
                                {% set formGroupMail %}
                                    {% block component_account_register_personal_mail %}
                                        {% block component_account_register_personal_mail_label %}
                                            <label class="form-label"
                                                   for="personalMail">
                                                {{ 'account.personalMailLabel'|trans|sw_sanitize }}{{ 'general.required'|trans|sw_sanitize }}
                                            </label>
                                        {% endblock %}

                                        {% block component_account_register_personal_mail_input %}
                                            <input type="email"
                                                   class="form-control{% if formViolations.getViolations('/email') is not empty %} is-invalid{% endif %}"
                                                   autocomplete="section-personal email"
                                                   id="personalMail"
                                                   placeholder="{{ 'account.personalMailPlaceholder'|trans|striptags }}"
                                                   name="email"
                                                   value="{{ data.get('email') }}"
                                                {% if config('core.loginRegistration.requireEmailConfirmation') %}
                                                    data-form-validation-equal="personalMail"
                                                {% endif %}
                                                   required="required">
                                        {% endblock %}

                                        {% block component_account_register_personal_mail_input_error %}
                                            {% if formViolations.getViolations('/email') is not empty %}
                                                {% sw_include '@Storefront/storefront/utilities/form-violation.html.twig' with {
                                                    violationPath: '/email'
                                                } %}
                                            {% endif %}
                                        {% endblock %}
                                    {% endblock %}
                                {% endset %}

                                {% set formGroupMailConfirmation %}
                                    {% block component_account_register_personal_mail_confirmation %}
                                        {% block component_account_register_personal_mail_confirmation_label %}
                                            <label class="form-label"
                                                   for="personalMailConfirmation">
                                                {{ 'account.personalMailConfirmationLabel'|trans|sw_sanitize }}{{ 'general.required'|trans|sw_sanitize }}
                                            </label>
                                        {% endblock %}

                                        {% block component_account_register_personal_mail_confirmation_input %}
                                            <input type="email"
                                                   class="form-control{% if formViolations.getViolations('/email') is not empty or formViolations.getViolations('/emailConfirmation') is not empty %} is-invalid{% endif %}"
                                                   autocomplete="section-personal email"
                                                   id="personalMailConfirmation"
                                                   placeholder="{{ 'account.personalMailConfirmationPlaceholder'|trans|striptags }}"
                                                   name="emailConfirmation"
                                                   value="{{ data.get('emailConfirmation') }}"
                                                   data-form-validation-equal="personalMail"
                                                   data-form-validation-equal-message="{{ 'account.personalMailConfirmationInvalidMessage'|trans|striptags }}"
                                                   required="required">
                                        {% endblock %}

                                        {% block component_account_register_personal_mail_confirmation_input_error %}
                                            {% if formViolations.getViolations('/email') is not empty %}
                                                {% sw_include '@Storefront/storefront/utilities/form-violation.html.twig' with {
                                                    violationPath: '/email'
                                                } %}
                                            {% endif %}

                                            {% if formViolations.getViolations('/emailConfirmation') is not empty %}
                                                {% sw_include '@Storefront/storefront/utilities/form-violation.html.twig' with {
                                                    violationPath: '/emailConfirmation'
                                                } %}
                                            {% endif %}
                                        {% endblock %}
                                    {% endblock %}
                                {% endset %}

                                {% set formGroupPassword %}
                                    {% block component_account_register_personal_password %}
                                        <span class="js-form-field-toggle-guest-mode">
                                            {% block component_account_register_personal_password_label %}
                                                <label class="form-label"
                                                       for="personalPassword">
                                                    {{ 'account.personalPasswordLabel'|trans|sw_sanitize }}{{ 'general.required'|trans|sw_sanitize }}
                                                </label>
                                            {% endblock %}

                                            {% block component_account_register_personal_password_input %}
                                                <input type="password"
                                                       class="form-control{% if formViolations.getViolations('/password') is not empty %} is-invalid{% endif %}"
                                                       autocomplete="new-password"
                                                       id="personalPassword"
                                                       placeholder="{{ 'account.personalPasswordPlaceholder'|trans|striptags }}"
                                                       name="password"
                                                       minlength="{{ config('core.loginRegistration.passwordMinLength') }}"
                                                       {% if config('core.loginRegistration.requirePasswordConfirmation') %}
                                                           data-form-validation-equal="newPassword"
                                                       {% endif %}
                                                    {% if config('core.loginRegistration.passwordMinLength') != 0 %}
                                                        data-form-validation-length="{{ config('core.loginRegistration.passwordMinLength') }}"
                                                        data-form-validation-length-message=" {{ 'account.personalPasswordDescription'|trans({
                                                            '%minLength%': config('core.loginRegistration.passwordMinLength')
                                                        })|sw_sanitize }}"
                                                    {% endif %}
                                                       required="required">
                                            {% endblock %}

                                            {% block component_account_register_personal_password_description %}
                                                {% if config('core.loginRegistration.passwordMinLength') != 0 %}
                                                    <small class="form-text js-validation-message"
                                                           data-form-validation-length-text="true">
                                                        {{ 'account.personalPasswordDescription'|trans({
                                                            '%minLength%': config('core.loginRegistration.passwordMinLength')
                                                        })|sw_sanitize }}
                                                    </small>
                                                {% endif %}
                                            {% endblock %}

                                            {% block component_account_register_personal_password_input_error %}
                                                {% if formViolations.getViolations('/password') is not empty %}
                                                    {% sw_include '@Storefront/storefront/utilities/form-violation.html.twig' with {
                                                        violationPath: '/password'
                                                    } %}
                                                {% endif %}
                                            {% endblock %}
                                        </span>
                                    {% endblock %}
                                {% endset %}

                                {% set formGroupPasswordConfirmation %}
                                    {% block component_account_register_personal_password_confirmation %}
                                        <span class="js-form-field-toggle-guest-mode">
                                            {% block component_account_register_personal_password_confirmation_label %}
                                                <label class="form-label"
                                                       for="personalPasswordConfirmation">
                                                    {{ 'account.personalPasswordConfirmationLabel'|trans|sw_sanitize }}{{ 'general.required'|trans|sw_sanitize }}
                                                </label>
                                            {% endblock %}

                                            {% block component_account_register_personal_password_confirmation_input %}
                                                <input type="password"
                                                       class="form-control{% if formViolations.getViolations('/password') is not empty or formViolations.getViolations('/passwordConfirmation') is not empty %} is-invalid{% endif %}"
                                                       autocomplete="new-password"
                                                       id="personalPasswordConfirmation"
                                                       placeholder="{{ 'account.personalPasswordConfirmationPlaceholder'|trans|striptags }}"
                                                       name="passwordConfirmation"
                                                       minlength="{{ config('core.loginRegistration.passwordMinLength') }}"
                                                       data-form-validation-equal="newPassword"
                                                       data-form-validation-equal-message="{{ 'account.personalPasswordConfirmationInvalidMessage'|trans|striptags }}"
                                                       required="required">
                                            {% endblock %}

                                            {% block component_account_register_personal_password_confirmation_input_error %}
                                                {% if formViolations.getViolations('/password') is not empty %}
                                                    {% sw_include '@Storefront/storefront/utilities/form-violation.html.twig' with {
                                                        violationPath: '/password'
                                                    } %}
                                                {% endif %}

                                                {% if formViolations.getViolations('/passwordConfirmation') is not empty %}
                                                    {% sw_include '@Storefront/storefront/utilities/form-violation.html.twig' with {
                                                        violationPath: '/passwordConfirmation'
                                                    } %}
                                                {% endif %}
                                            {% endblock %}
                                        </span>
                                    {% endblock %}
                                {% endset %}

                                {% block component_account_register_personal_account_fields %}
                                    <div class="row g-2">
                                        <div class="form-group">
                                            {{ formGroupMail }}
                                        </div>
                                        <div class="form-group">
                                            {% if config('core.loginRegistration.requireEmailConfirmation') %}
                                                {{ formGroupMailConfirmation }}
                                            {% elseif not config('core.loginRegistration.requirePasswordConfirmation') %}
                                                {{ formGroupPassword }}
                                            {% endif %}
                                        </div>
                                        <div class="form-group mb-0">
                                            {% if config('core.loginRegistration.requireEmailConfirmation') or config('core.loginRegistration.requirePasswordConfirmation') %}
                                                {{ formGroupPassword }}
                                            {% endif %}
                                        </div>
                                        <div class="form-group mb-0">
                                            {% if config('core.loginRegistration.requirePasswordConfirmation') %}
                                                {{ formGroupPasswordConfirmation }}
                                            {% endif %}
                                        </div>
                                    </div>
                                {% endblock %}
                            {% endblock %}
                        </div>
                    {% endblock %}

                    {% block component_account_register_captcha %}
                        {% sw_include '@Storefront/storefront/component/captcha/base.html.twig' with { preCheck: true } %}
                    {% endblock %}

                    {% block component_account_register_privacy %}
                        {% sw_include '@Storefront/storefront/component/privacy-notice.html.twig' %}
                    {% endblock %}

                    {% block component_account_register_required_fields %}
                        <p class="register-required-info">
                            {{ 'general.requiredFields'|trans|sw_sanitize }}
                        </p>
                    {% endblock %}

                    {% block component_account_register_submit %}
                        <div class="register-submit d-grid">
                            <button type="submit"
                                    class="btn btn-primary btn-lg">
                                {{ 'account.registerSubmit'|trans|sw_sanitize }}
                            </button>
                        </div>
                    {% endblock %}
                </form>
                <div class="row my-2">
                    <p class="m-0 text-secondary text-center"> {{ 'account.registerHaveAccountLabel'|trans|sw_sanitize }}<a
                            href="{{ path('frontend.account.login.page') }}" class="link-primary text-decoration-none"> {{ 'account.registerHaveAccountToLoginLabel'|trans|sw_sanitize }}</a></p>
                </div>
            {% endblock %}
        </div>
    </div>
{% endblock %}
